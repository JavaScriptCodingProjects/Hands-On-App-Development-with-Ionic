{"version":3,"sources":["webpack:///node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///node_modules/date-fns/esm/_lib/assign/index.js","webpack:///node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack:///node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///node_modules/date-fns/esm/add/index.js","webpack:///node_modules/date-fns/esm/addBusinessDays/index.js","webpack:///node_modules/date-fns/esm/addDays/index.js","webpack:///node_modules/date-fns/esm/addHours/index.js","webpack:///node_modules/date-fns/esm/addISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///node_modules/date-fns/esm/addMinutes/index.js","webpack:///node_modules/date-fns/esm/addMonths/index.js","webpack:///node_modules/date-fns/esm/addQuarters/index.js","webpack:///node_modules/date-fns/esm/addSeconds/index.js","webpack:///node_modules/date-fns/esm/addWeeks/index.js","webpack:///node_modules/date-fns/esm/addYears/index.js","webpack:///node_modules/date-fns/esm/areIntervalsOverlapping/index.js","webpack:///node_modules/date-fns/esm/closestIndexTo/index.js","webpack:///node_modules/date-fns/esm/closestTo/index.js","webpack:///node_modules/date-fns/esm/compareAsc/index.js","webpack:///node_modules/date-fns/esm/compareDesc/index.js","webpack:///node_modules/date-fns/esm/constants/index.js","webpack:///node_modules/date-fns/esm/differenceInBusinessDays/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarDays/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarMonths/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","webpack:///node_modules/date-fns/esm/differenceInCalendarYears/index.js","webpack:///node_modules/date-fns/esm/differenceInDays/index.js","webpack:///node_modules/date-fns/esm/differenceInHours/index.js","webpack:///node_modules/date-fns/esm/differenceInISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack:///node_modules/date-fns/esm/differenceInMinutes/index.js","webpack:///node_modules/date-fns/esm/differenceInMonths/index.js","webpack:///node_modules/date-fns/esm/differenceInQuarters/index.js","webpack:///node_modules/date-fns/esm/differenceInSeconds/index.js","webpack:///node_modules/date-fns/esm/differenceInWeeks/index.js","webpack:///node_modules/date-fns/esm/differenceInYears/index.js","webpack:///node_modules/date-fns/esm/eachDayOfInterval/index.js","webpack:///node_modules/date-fns/esm/eachMonthOfInterval/index.js","webpack:///node_modules/date-fns/esm/eachWeekOfInterval/index.js","webpack:///node_modules/date-fns/esm/eachWeekendOfInterval/index.js","webpack:///node_modules/date-fns/esm/eachWeekendOfMonth/index.js","webpack:///node_modules/date-fns/esm/eachWeekendOfYear/index.js","webpack:///node_modules/date-fns/esm/eachYearOfInterval/index.js","webpack:///node_modules/date-fns/esm/endOfDay/index.js","webpack:///node_modules/date-fns/esm/endOfDecade/index.js","webpack:///node_modules/date-fns/esm/endOfHour/index.js","webpack:///node_modules/date-fns/esm/endOfISOWeek/index.js","webpack:///node_modules/date-fns/esm/endOfISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/endOfMinute/index.js","webpack:///node_modules/date-fns/esm/endOfMonth/index.js","webpack:///node_modules/date-fns/esm/endOfQuarter/index.js","webpack:///node_modules/date-fns/esm/endOfSecond/index.js","webpack:///node_modules/date-fns/esm/endOfToday/index.js","webpack:///node_modules/date-fns/esm/endOfTomorrow/index.js","webpack:///node_modules/date-fns/esm/endOfWeek/index.js","webpack:///node_modules/date-fns/esm/endOfYear/index.js","webpack:///node_modules/date-fns/esm/endOfYesterday/index.js","webpack:///node_modules/date-fns/esm/format/index.js","webpack:///node_modules/date-fns/esm/formatDistance/index.js","webpack:///node_modules/date-fns/esm/formatDistanceStrict/index.js","webpack:///node_modules/date-fns/esm/formatDistanceToNow/index.js","webpack:///node_modules/date-fns/esm/formatISO/index.js","webpack:///node_modules/date-fns/esm/formatISO9075/index.js","webpack:///node_modules/date-fns/esm/formatRFC3339/index.js","webpack:///node_modules/date-fns/esm/formatRFC7231/index.js","webpack:///node_modules/date-fns/esm/formatRelative/index.js","webpack:///node_modules/date-fns/esm/fromUnixTime/index.js","webpack:///node_modules/date-fns/esm/getDate/index.js","webpack:///node_modules/date-fns/esm/getDay/index.js","webpack:///node_modules/date-fns/esm/getDayOfYear/index.js","webpack:///node_modules/date-fns/esm/getDaysInMonth/index.js","webpack:///node_modules/date-fns/esm/getDaysInYear/index.js","webpack:///node_modules/date-fns/esm/getDecade/index.js","webpack:///node_modules/date-fns/esm/getHours/index.js","webpack:///node_modules/date-fns/esm/getISODay/index.js","webpack:///node_modules/date-fns/esm/getISOWeek/index.js","webpack:///node_modules/date-fns/esm/getISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/getISOWeeksInYear/index.js","webpack:///node_modules/date-fns/esm/getMilliseconds/index.js","webpack:///node_modules/date-fns/esm/getMinutes/index.js","webpack:///node_modules/date-fns/esm/getMonth/index.js","webpack:///node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","webpack:///node_modules/date-fns/esm/getQuarter/index.js","webpack:///node_modules/date-fns/esm/getSeconds/index.js","webpack:///node_modules/date-fns/esm/getTime/index.js","webpack:///node_modules/date-fns/esm/getUnixTime/index.js","webpack:///node_modules/date-fns/esm/getWeek/index.js","webpack:///node_modules/date-fns/esm/getWeekOfMonth/index.js","webpack:///node_modules/date-fns/esm/getWeekYear/index.js","webpack:///node_modules/date-fns/esm/getWeeksInMonth/index.js","webpack:///node_modules/date-fns/esm/getYear/index.js","webpack:///node_modules/date-fns/esm/index.js","webpack:///node_modules/date-fns/esm/isAfter/index.js","webpack:///node_modules/date-fns/esm/isBefore/index.js","webpack:///node_modules/date-fns/esm/isDate/index.js","webpack:///node_modules/date-fns/esm/isEqual/index.js","webpack:///node_modules/date-fns/esm/isExists/index.js","webpack:///node_modules/date-fns/esm/isFirstDayOfMonth/index.js","webpack:///node_modules/date-fns/esm/isFriday/index.js","webpack:///node_modules/date-fns/esm/isFuture/index.js","webpack:///node_modules/date-fns/esm/isLastDayOfMonth/index.js","webpack:///node_modules/date-fns/esm/isLeapYear/index.js","webpack:///node_modules/date-fns/esm/isMonday/index.js","webpack:///node_modules/date-fns/esm/isPast/index.js","webpack:///node_modules/date-fns/esm/isSameDay/index.js","webpack:///node_modules/date-fns/esm/isSameHour/index.js","webpack:///node_modules/date-fns/esm/isSameISOWeek/index.js","webpack:///node_modules/date-fns/esm/isSameISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/isSameMinute/index.js","webpack:///node_modules/date-fns/esm/isSameMonth/index.js","webpack:///node_modules/date-fns/esm/isSameQuarter/index.js","webpack:///node_modules/date-fns/esm/isSameSecond/index.js","webpack:///node_modules/date-fns/esm/isSameWeek/index.js","webpack:///node_modules/date-fns/esm/isSameYear/index.js","webpack:///node_modules/date-fns/esm/isSaturday/index.js","webpack:///node_modules/date-fns/esm/isSunday/index.js","webpack:///node_modules/date-fns/esm/isThisHour/index.js","webpack:///node_modules/date-fns/esm/isThisISOWeek/index.js","webpack:///node_modules/date-fns/esm/isThisMinute/index.js","webpack:///node_modules/date-fns/esm/isThisMonth/index.js","webpack:///node_modules/date-fns/esm/isThisQuarter/index.js","webpack:///node_modules/date-fns/esm/isThisSecond/index.js","webpack:///node_modules/date-fns/esm/isThisWeek/index.js","webpack:///node_modules/date-fns/esm/isThisYear/index.js","webpack:///node_modules/date-fns/esm/isThursday/index.js","webpack:///node_modules/date-fns/esm/isToday/index.js","webpack:///node_modules/date-fns/esm/isTomorrow/index.js","webpack:///node_modules/date-fns/esm/isTuesday/index.js","webpack:///node_modules/date-fns/esm/isValid/index.js","webpack:///node_modules/date-fns/esm/isWednesday/index.js","webpack:///node_modules/date-fns/esm/isWeekend/index.js","webpack:///node_modules/date-fns/esm/isWithinInterval/index.js","webpack:///node_modules/date-fns/esm/isYesterday/index.js","webpack:///node_modules/date-fns/esm/lastDayOfDecade/index.js","webpack:///node_modules/date-fns/esm/lastDayOfISOWeek/index.js","webpack:///node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/lastDayOfMonth/index.js","webpack:///node_modules/date-fns/esm/lastDayOfQuarter/index.js","webpack:///node_modules/date-fns/esm/lastDayOfWeek/index.js","webpack:///node_modules/date-fns/esm/lastDayOfYear/index.js","webpack:///node_modules/date-fns/esm/lightFormat/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///node_modules/date-fns/esm/locale/en-US/index.js","webpack:///node_modules/date-fns/esm/max/index.js","webpack:///node_modules/date-fns/esm/min/index.js","webpack:///node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack:///node_modules/date-fns/esm/parse/index.js","webpack:///node_modules/date-fns/esm/parseISO/index.js","webpack:///node_modules/date-fns/esm/parseJSON/index.js","webpack:///node_modules/date-fns/esm/roundToNearestMinutes/index.js","webpack:///node_modules/date-fns/esm/set/index.js","webpack:///node_modules/date-fns/esm/setDate/index.js","webpack:///node_modules/date-fns/esm/setDay/index.js","webpack:///node_modules/date-fns/esm/setDayOfYear/index.js","webpack:///node_modules/date-fns/esm/setHours/index.js","webpack:///node_modules/date-fns/esm/setISODay/index.js","webpack:///node_modules/date-fns/esm/setISOWeek/index.js","webpack:///node_modules/date-fns/esm/setISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/setMilliseconds/index.js","webpack:///node_modules/date-fns/esm/setMinutes/index.js","webpack:///node_modules/date-fns/esm/setMonth/index.js","webpack:///node_modules/date-fns/esm/setQuarter/index.js","webpack:///node_modules/date-fns/esm/setSeconds/index.js","webpack:///node_modules/date-fns/esm/setWeek/index.js","webpack:///node_modules/date-fns/esm/setWeekYear/index.js","webpack:///node_modules/date-fns/esm/setYear/index.js","webpack:///node_modules/date-fns/esm/startOfDay/index.js","webpack:///node_modules/date-fns/esm/startOfDecade/index.js","webpack:///node_modules/date-fns/esm/startOfHour/index.js","webpack:///node_modules/date-fns/esm/startOfISOWeek/index.js","webpack:///node_modules/date-fns/esm/startOfISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/startOfMinute/index.js","webpack:///node_modules/date-fns/esm/startOfMonth/index.js","webpack:///node_modules/date-fns/esm/startOfQuarter/index.js","webpack:///node_modules/date-fns/esm/startOfSecond/index.js","webpack:///node_modules/date-fns/esm/startOfToday/index.js","webpack:///node_modules/date-fns/esm/startOfTomorrow/index.js","webpack:///node_modules/date-fns/esm/startOfWeek/index.js","webpack:///node_modules/date-fns/esm/startOfWeekYear/index.js","webpack:///node_modules/date-fns/esm/startOfYear/index.js","webpack:///node_modules/date-fns/esm/startOfYesterday/index.js","webpack:///node_modules/date-fns/esm/sub/index.js","webpack:///node_modules/date-fns/esm/subBusinessDays/index.js","webpack:///node_modules/date-fns/esm/subDays/index.js","webpack:///node_modules/date-fns/esm/subHours/index.js","webpack:///node_modules/date-fns/esm/subISOWeekYears/index.js","webpack:///node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///node_modules/date-fns/esm/subMinutes/index.js","webpack:///node_modules/date-fns/esm/subMonths/index.js","webpack:///node_modules/date-fns/esm/subQuarters/index.js","webpack:///node_modules/date-fns/esm/subSeconds/index.js","webpack:///node_modules/date-fns/esm/subWeeks/index.js","webpack:///node_modules/date-fns/esm/subYears/index.js","webpack:///node_modules/date-fns/esm/toDate/index.js","webpack:///src/app/core/services/picture.service.ts","webpack:///src/app/home/components/manage-note/manage-note.component.html","webpack:///src/app/home/components/manage-note/manage-note.component.ts","webpack:///src/app/home/components/notes-filters-popover/notes-filters-popover.component.ts","webpack:///src/app/home/components/notes-filters-popover/notes-filters-popover.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.page.html","webpack:///src/app/home/home.page.ts"],"names":["addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","assign","target","dirtyObject","TypeError","property","hasOwnProperty","cloneObject","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","quarter","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","floor","getTime","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","toUpperCase","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","longFormatters","p","P","MILLISECONDS_IN_MINUTE","getTimezoneOffsetInMilliseconds","dirtyDate","Date","baseTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","MILLISECONDS_IN_DAY","getUTCDayOfYear","arguments","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","MILLISECONDS_IN_WEEK","getUTCISOWeek","diff","round","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getUTCWeek","getUTCWeekYear","dirtyOptions","locale","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","RangeError","firstWeekOfNextYear","firstWeekOfThisYear","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","requiredArgs","required","args","setUTCDay","dirtyDay","localeWeekStartsOn","defaultWeekStartsOn","currentDay","remainder","dayIndex","setUTCDate","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","startOfUTCISOWeek","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","startOfUTCWeekYear","firstWeek","toInteger","dirtyNumber","NaN","Number","isNaN","add","duration","years","months","days","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","addBusinessDays","dirtyAmount","amount","getHours","fullWeeks","setDate","getDate","restDays","setHours","addDays","MILLISECONDS_IN_HOUR","addHours","addISOWeekYears","addMilliseconds","addMinutes","addMonths","desiredMonth","getMonth","dateWithDesiredMonth","setFullYear","getFullYear","daysInMonth","setMonth","min","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","undefined","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","inclusive","closestIndexTo","dirtyDateToCompare","dirtyDatesArray","dateToCompare","timeToCompare","datesArray","forEach","Array","prototype","slice","call","result","minDistance","index","currentDate","distance","closestTo","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","compareDesc","maxTime","minTime","differenceInBusinessDays","calendarDifference","weeks","differenceInCalendarDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","differenceInCalendarISOWeekYears","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","differenceInDays","isLastDayNotFull","differenceInHours","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMilliseconds","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","dates","step","push","eachMonthOfInterval","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","eachWeekendOfInterval","dateInterval","weekends","eachWeekendOfMonth","eachWeekendOfYear","eachYearOfInterval","endOfDay","endOfDecade","decade","endOfHour","setMinutes","endOfISOWeek","endOfISOWeekYear","setMilliseconds","getMilliseconds","endOfMinute","endOfMonth","endOfQuarter","currentMonth","endOfSecond","endOfToday","now","endOfTomorrow","endOfWeek","getDay","endOfYear","endOfYesterday","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","dirtyFormatStr","formatStr","utcDate","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","input","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","formatDistance","dirtyBaseDate","comparison","localizeOptions","addSuffix","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethod","roundingMethodFn","formatDistanceToNow","formatISO","concat","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","hour","minute","getMinutes","second","getSeconds","separator","formatISO9075","formatRFC3339","fractionDigits","fractionalSecond","formatRFC7231","dayName","dayOfMonth","monthName","formatRelative","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","getDaysInMonth","monthIndex","lastDayOfMonth","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeekYear","getISOWeeksInYear","thisYear","nextYear","valueOf","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getQuarter","getUnixTime","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeekYear","getWeeksInMonth","getYear","isAfter","isBefore","isDate","value","Object","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isLeapYear","isMonday","isPast","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameYear","isSaturday","isSunday","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isValid","isWednesday","isWeekend","isWithinInterval","startTime","isYesterday","lastDayOfDecade","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfWeek","lastDayOfYear","lightFormat","buildFormatLongFn","defaultWidth","formats","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","findIndex","test","findKey","valueCallback","rest","object","predicate","key","array","buildMatchPatternFn","parseResult","parsePattern","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","dateFormats","full","medium","timeFormats","dateTimeFormats","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","_dirtyOptions","rem100","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","code","max","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyBackupDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","isArray","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","reverse","setterArray","convertedDate","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","argument","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","fullTime","fullTimeDate","fullTimeDateDiffDay","offsetDiff","split","timeString","substr","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","UTC","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyDayOfMonth","setDay","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","setISOWeekYear","dirtyISOWeekYear","dirtyMilliseconds","dirtyMinutes","dirtyMonth","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDay","startOfDecade","startOfHour","startOfISOWeek","startOfISOWeekYear","startOfMinute","startOfMonth","startOfQuarter","startOfSecond","startOfToday","startOfTomorrow","startOfWeek","startOfWeekYear","startOfYear","cleanDate","startOfYesterday","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","subBusinessDays","subDays","subHours","subISOWeekYears","subMilliseconds","subMinutes","subMonths","subQuarters","subSeconds","subWeeks","subYears","toDate","argStr","console","warn","Error","stack","PictureService","camera","photoViewer","actionSheetController","platform","defaultOptions","quality","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","sourceType","PictureSourceType","CAMERA","allowEdit","correctOrientation","ready","then","isAndroid","is","existingImage","Promise","resolve","reject","actionSheetConfig","header","buttons","text","icon","handler","captureImage","imageData","PHOTOLIBRARY","err","role","splice","create","actionSheet","present","getPicture","base64Image","log","imagePath","show","providedIn","NoteManageModes","ManageNoteComponent","modalController","fb","pictureService","mode","ADD","manageModes","noteForm","group","title","description","reminderTime","note","EDIT","get","setValue","noteImage","imageStr","params","dismiss","formSubmit","takePicture","dateTimeClicked","selector","templateUrl","styleUrls","NotesFiltersPopoverComponent","popoverController","selectedFilter","ACTIVE","filters","setFilter","routes","path","component","HomePageModule","forChild","imports","entryComponents","declarations","HomePage","store","localNotifications","ev","event","translucent","componentProps","popover","onDidDismiss","response","data","archiveNote","isScheduled","Id","clear","showPreview","modal","createNote","savedNote","schedule","trigger","at","id","noteItem","updateNote","showFilters","changeDetection","OnPush"],"mappings":"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AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;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","file":"home-home-module-es5.js","sourcesContent":["export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + required > 1 ? 's' : '' + ' required, but only ' + args.length + ' present');\n  }\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import addDays from '../addDays/index.js';\nimport addMonths from '../addMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, days, hours, minutes and seconds to be added\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * var result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 24,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Sat Sep 8 2018 15:29:20\n */\n\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var dateWithMonths = addMonths(toDate(dirtyDate), months + years * 12); // Add days\n\n  var dateWithDays = addDays(dateWithMonths, days); // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getISOWeekYear from '../getISOWeekYear/index.js';\nimport setISOWeekYear from '../setISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","import isValid from '../isValid/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import getQuarter from '../getQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n */\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarISOWeekYears from '../differenceInCalendarISOWeekYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport subISOWeekYears from '../subISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from '../differenceInMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight));\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import addWeeks from '../addWeeks/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import eachDayOfInterval from '../eachDayOfInterval/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * var result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * var result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import endOfWeek from '../endOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from '../endOfDay/index.js';\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(absoluteOffset / 60, 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\n\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var fractionDigits = options.fractionDigits == null ? 0 : toInteger(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(absoluteOffset / 60, 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from '../toDate/index.js';\nimport isLeapYear from '../isLeapYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (isNaN(date)) {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * var result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from '../getDate/index.js';\nimport getDay from '../getDay/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as add } from './add/index.js';\nexport { default as addBusinessDays } from './addBusinessDays/index.js';\nexport { default as addDays } from './addDays/index.js';\nexport { default as addHours } from './addHours/index.js';\nexport { default as addISOWeekYears } from './addISOWeekYears/index.js';\nexport { default as addMilliseconds } from './addMilliseconds/index.js';\nexport { default as addMinutes } from './addMinutes/index.js';\nexport { default as addMonths } from './addMonths/index.js';\nexport { default as addQuarters } from './addQuarters/index.js';\nexport { default as addSeconds } from './addSeconds/index.js';\nexport { default as addWeeks } from './addWeeks/index.js';\nexport { default as addYears } from './addYears/index.js';\nexport { default as areIntervalsOverlapping } from './areIntervalsOverlapping/index.js';\nexport { default as closestIndexTo } from './closestIndexTo/index.js';\nexport { default as closestTo } from './closestTo/index.js';\nexport { default as compareAsc } from './compareAsc/index.js';\nexport { default as compareDesc } from './compareDesc/index.js';\nexport { default as differenceInBusinessDays } from './differenceInBusinessDays/index.js';\nexport { default as differenceInCalendarDays } from './differenceInCalendarDays/index.js';\nexport { default as differenceInCalendarISOWeekYears } from './differenceInCalendarISOWeekYears/index.js';\nexport { default as differenceInCalendarISOWeeks } from './differenceInCalendarISOWeeks/index.js';\nexport { default as differenceInCalendarMonths } from './differenceInCalendarMonths/index.js';\nexport { default as differenceInCalendarQuarters } from './differenceInCalendarQuarters/index.js';\nexport { default as differenceInCalendarWeeks } from './differenceInCalendarWeeks/index.js';\nexport { default as differenceInCalendarYears } from './differenceInCalendarYears/index.js';\nexport { default as differenceInDays } from './differenceInDays/index.js';\nexport { default as differenceInHours } from './differenceInHours/index.js';\nexport { default as differenceInISOWeekYears } from './differenceInISOWeekYears/index.js';\nexport { default as differenceInMilliseconds } from './differenceInMilliseconds/index.js';\nexport { default as differenceInMinutes } from './differenceInMinutes/index.js';\nexport { default as differenceInMonths } from './differenceInMonths/index.js';\nexport { default as differenceInQuarters } from './differenceInQuarters/index.js';\nexport { default as differenceInSeconds } from './differenceInSeconds/index.js';\nexport { default as differenceInWeeks } from './differenceInWeeks/index.js';\nexport { default as differenceInYears } from './differenceInYears/index.js';\nexport { default as eachDayOfInterval } from './eachDayOfInterval/index.js';\nexport { default as eachMonthOfInterval } from './eachMonthOfInterval/index.js';\nexport { default as eachWeekOfInterval } from './eachWeekOfInterval/index.js';\nexport { default as eachWeekendOfInterval } from './eachWeekendOfInterval/index.js';\nexport { default as eachWeekendOfMonth } from './eachWeekendOfMonth/index.js';\nexport { default as eachWeekendOfYear } from './eachWeekendOfYear/index.js';\nexport { default as eachYearOfInterval } from './eachYearOfInterval/index.js';\nexport { default as endOfDay } from './endOfDay/index.js';\nexport { default as endOfDecade } from './endOfDecade/index.js';\nexport { default as endOfHour } from './endOfHour/index.js';\nexport { default as endOfISOWeek } from './endOfISOWeek/index.js';\nexport { default as endOfISOWeekYear } from './endOfISOWeekYear/index.js';\nexport { default as endOfMinute } from './endOfMinute/index.js';\nexport { default as endOfMonth } from './endOfMonth/index.js';\nexport { default as endOfQuarter } from './endOfQuarter/index.js';\nexport { default as endOfSecond } from './endOfSecond/index.js';\nexport { default as endOfToday } from './endOfToday/index.js';\nexport { default as endOfTomorrow } from './endOfTomorrow/index.js';\nexport { default as endOfWeek } from './endOfWeek/index.js';\nexport { default as endOfYear } from './endOfYear/index.js';\nexport { default as endOfYesterday } from './endOfYesterday/index.js';\nexport { default as format } from './format/index.js';\nexport { default as formatDistance } from './formatDistance/index.js';\nexport { default as formatDistanceStrict } from './formatDistanceStrict/index.js';\nexport { default as formatDistanceToNow } from './formatDistanceToNow/index.js';\nexport { default as formatISO } from './formatISO/index.js';\nexport { default as formatISO9075 } from './formatISO9075/index.js';\nexport { default as formatRFC3339 } from './formatRFC3339/index.js';\nexport { default as formatRFC7231 } from './formatRFC7231/index.js';\nexport { default as formatRelative } from './formatRelative/index.js';\nexport { default as fromUnixTime } from './fromUnixTime/index.js';\nexport { default as getDate } from './getDate/index.js';\nexport { default as getDay } from './getDay/index.js';\nexport { default as getDayOfYear } from './getDayOfYear/index.js';\nexport { default as getDaysInMonth } from './getDaysInMonth/index.js';\nexport { default as getDaysInYear } from './getDaysInYear/index.js';\nexport { default as getDecade } from './getDecade/index.js';\nexport { default as getHours } from './getHours/index.js';\nexport { default as getISODay } from './getISODay/index.js';\nexport { default as getISOWeek } from './getISOWeek/index.js';\nexport { default as getISOWeekYear } from './getISOWeekYear/index.js';\nexport { default as getISOWeeksInYear } from './getISOWeeksInYear/index.js';\nexport { default as getMilliseconds } from './getMilliseconds/index.js';\nexport { default as getMinutes } from './getMinutes/index.js';\nexport { default as getMonth } from './getMonth/index.js';\nexport { default as getOverlappingDaysInIntervals } from './getOverlappingDaysInIntervals/index.js';\nexport { default as getQuarter } from './getQuarter/index.js';\nexport { default as getSeconds } from './getSeconds/index.js';\nexport { default as getTime } from './getTime/index.js';\nexport { default as getUnixTime } from './getUnixTime/index.js';\nexport { default as getWeek } from './getWeek/index.js';\nexport { default as getWeekOfMonth } from './getWeekOfMonth/index.js';\nexport { default as getWeekYear } from './getWeekYear/index.js';\nexport { default as getWeeksInMonth } from './getWeeksInMonth/index.js';\nexport { default as getYear } from './getYear/index.js';\nexport { default as isAfter } from './isAfter/index.js';\nexport { default as isBefore } from './isBefore/index.js';\nexport { default as isDate } from './isDate/index.js';\nexport { default as isEqual } from './isEqual/index.js';\nexport { default as isExists } from './isExists/index.js';\nexport { default as isFirstDayOfMonth } from './isFirstDayOfMonth/index.js';\nexport { default as isFriday } from './isFriday/index.js';\nexport { default as isFuture } from './isFuture/index.js';\nexport { default as isLastDayOfMonth } from './isLastDayOfMonth/index.js';\nexport { default as isLeapYear } from './isLeapYear/index.js';\nexport { default as isMonday } from './isMonday/index.js';\nexport { default as isPast } from './isPast/index.js';\nexport { default as isSameDay } from './isSameDay/index.js';\nexport { default as isSameHour } from './isSameHour/index.js';\nexport { default as isSameISOWeek } from './isSameISOWeek/index.js';\nexport { default as isSameISOWeekYear } from './isSameISOWeekYear/index.js';\nexport { default as isSameMinute } from './isSameMinute/index.js';\nexport { default as isSameMonth } from './isSameMonth/index.js';\nexport { default as isSameQuarter } from './isSameQuarter/index.js';\nexport { default as isSameSecond } from './isSameSecond/index.js';\nexport { default as isSameWeek } from './isSameWeek/index.js';\nexport { default as isSameYear } from './isSameYear/index.js';\nexport { default as isSaturday } from './isSaturday/index.js';\nexport { default as isSunday } from './isSunday/index.js';\nexport { default as isThisHour } from './isThisHour/index.js';\nexport { default as isThisISOWeek } from './isThisISOWeek/index.js';\nexport { default as isThisMinute } from './isThisMinute/index.js';\nexport { default as isThisMonth } from './isThisMonth/index.js';\nexport { default as isThisQuarter } from './isThisQuarter/index.js';\nexport { default as isThisSecond } from './isThisSecond/index.js';\nexport { default as isThisWeek } from './isThisWeek/index.js';\nexport { default as isThisYear } from './isThisYear/index.js';\nexport { default as isThursday } from './isThursday/index.js';\nexport { default as isToday } from './isToday/index.js';\nexport { default as isTomorrow } from './isTomorrow/index.js';\nexport { default as isTuesday } from './isTuesday/index.js';\nexport { default as isValid } from './isValid/index.js';\nexport { default as isWednesday } from './isWednesday/index.js';\nexport { default as isWeekend } from './isWeekend/index.js';\nexport { default as isWithinInterval } from './isWithinInterval/index.js';\nexport { default as isYesterday } from './isYesterday/index.js';\nexport { default as lastDayOfDecade } from './lastDayOfDecade/index.js';\nexport { default as lastDayOfISOWeek } from './lastDayOfISOWeek/index.js';\nexport { default as lastDayOfISOWeekYear } from './lastDayOfISOWeekYear/index.js';\nexport { default as lastDayOfMonth } from './lastDayOfMonth/index.js';\nexport { default as lastDayOfQuarter } from './lastDayOfQuarter/index.js';\nexport { default as lastDayOfWeek } from './lastDayOfWeek/index.js';\nexport { default as lastDayOfYear } from './lastDayOfYear/index.js';\nexport { default as lightFormat } from './lightFormat/index.js';\nexport { default as max } from './max/index.js';\nexport { default as min } from './min/index.js';\nexport { default as parse } from './parse/index.js';\nexport { default as parseISO } from './parseISO/index.js';\nexport { default as parseJSON } from './parseJSON/index.js';\nexport { default as roundToNearestMinutes } from './roundToNearestMinutes/index.js';\nexport { default as set } from './set/index.js';\nexport { default as setDate } from './setDate/index.js';\nexport { default as setDay } from './setDay/index.js';\nexport { default as setDayOfYear } from './setDayOfYear/index.js';\nexport { default as setHours } from './setHours/index.js';\nexport { default as setISODay } from './setISODay/index.js';\nexport { default as setISOWeek } from './setISOWeek/index.js';\nexport { default as setISOWeekYear } from './setISOWeekYear/index.js';\nexport { default as setMilliseconds } from './setMilliseconds/index.js';\nexport { default as setMinutes } from './setMinutes/index.js';\nexport { default as setMonth } from './setMonth/index.js';\nexport { default as setQuarter } from './setQuarter/index.js';\nexport { default as setSeconds } from './setSeconds/index.js';\nexport { default as setWeek } from './setWeek/index.js';\nexport { default as setWeekYear } from './setWeekYear/index.js';\nexport { default as setYear } from './setYear/index.js';\nexport { default as startOfDay } from './startOfDay/index.js';\nexport { default as startOfDecade } from './startOfDecade/index.js';\nexport { default as startOfHour } from './startOfHour/index.js';\nexport { default as startOfISOWeek } from './startOfISOWeek/index.js';\nexport { default as startOfISOWeekYear } from './startOfISOWeekYear/index.js';\nexport { default as startOfMinute } from './startOfMinute/index.js';\nexport { default as startOfMonth } from './startOfMonth/index.js';\nexport { default as startOfQuarter } from './startOfQuarter/index.js';\nexport { default as startOfSecond } from './startOfSecond/index.js';\nexport { default as startOfToday } from './startOfToday/index.js';\nexport { default as startOfTomorrow } from './startOfTomorrow/index.js';\nexport { default as startOfWeek } from './startOfWeek/index.js';\nexport { default as startOfWeekYear } from './startOfWeekYear/index.js';\nexport { default as startOfYear } from './startOfYear/index.js';\nexport { default as startOfYesterday } from './startOfYesterday/index.js';\nexport { default as sub } from './sub/index.js';\nexport { default as subBusinessDays } from './subBusinessDays/index.js';\nexport { default as subDays } from './subDays/index.js';\nexport { default as subHours } from './subHours/index.js';\nexport { default as subISOWeekYears } from './subISOWeekYears/index.js';\nexport { default as subMilliseconds } from './subMilliseconds/index.js';\nexport { default as subMinutes } from './subMinutes/index.js';\nexport { default as subMonths } from './subMonths/index.js';\nexport { default as subQuarters } from './subQuarters/index.js';\nexport { default as subSeconds } from './subSeconds/index.js';\nexport { default as subWeeks } from './subWeeks/index.js';\nexport { default as subYears } from './subYears/index.js';\nexport { default as toDate } from './toDate/index.js';\nexport * from './constants/index.js';","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from '../toDate/index.js';\nimport endOfDay from '../endOfDay/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import startOfMinute from '../startOfMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import startOfQuarter from '../startOfQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import startOfSecond from '../startOfSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\n\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import isSameHour from '../isSameHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from '../isSameISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from '../isSameMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from '../isSameMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from '../isSameQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from '../isSameSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from '../isSameYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import isSameDay from '../isSameDay/index.js';\nimport subDays from '../subDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import lastDayOfWeek from '../lastDayOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/lightFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport isValid from '../isValid/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '1987-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `backupDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `backupDate` which works as a context of parsing.\n *\n * `backupDate` must be passed for correct work of the function.\n * If you're not sure which `backupDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `backupDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `backupDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} backupDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyBackupDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyBackupDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyBackupDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var fullTime = timestamp + time;\n    var fullTimeDate = new Date(fullTime);\n    offset = getTimezoneOffsetInMilliseconds(fullTimeDate); // Adjust time when it's coming from DST\n\n    var fullTimeDateDiffDay = new Date(fullTime);\n\n    if (offset > 0) {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() + 1);\n    } else {\n      fullTimeDateDiffDay.setDate(fullTimeDate.getDate() - 1);\n    }\n\n    var offsetDiff = getTimezoneOffsetInMilliseconds(fullTimeDateDiffDay) - offset;\n\n    if (offsetDiff > 0) {\n      offset += offsetDiff;\n    }\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n *     - `2000-03-15T05:20:10Z`: Without milliseconds\n *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n *     - A `Date` instance will be cloned\n *     - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO1806 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes). \n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\n\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from '../addDays/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  return addDays(date, diff, options);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getISOWeek from '../getISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from '../getWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 8 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 8, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addBusinessDays from '../addBusinessDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addHours from '../addHours/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addISOWeekYears from '../addISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMinutes from '../addMinutes/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addQuarters from '../addQuarters/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addSeconds from '../addSeconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Camera, CameraOptions, PictureSourceType } from '@ionic-native/camera/ngx';\nimport { PhotoViewer } from '@ionic-native/photo-viewer/ngx';\nimport { ActionSheetController, Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PictureService {\n  defaultOptions: CameraOptions = {\n    quality: 100,\n    destinationType: this.camera.DestinationType.DATA_URL,\n    encodingType: this.camera.EncodingType.JPEG,\n    mediaType: this.camera.MediaType.PICTURE,\n    sourceType: this.camera.PictureSourceType.CAMERA,\n    allowEdit: true,\n    correctOrientation: true\n  };\n  isAndroid: boolean;\n\n  constructor(\n    private camera: Camera,\n    private photoViewer: PhotoViewer,\n    private actionSheetController: ActionSheetController,\n    private platform: Platform\n  ) {\n    this.platform.ready()\n      .then(() => {\n        this.isAndroid = this.platform.is('android');\n      });\n  }\n\n  async getPicture(existingImage = null): Promise<string> {\n    return new Promise(async (resolve, reject) => {\n      const actionSheetConfig = {\n        header: 'Note Image',\n        buttons: [{\n          text: 'Camera',\n          icon: this.isAndroid ? 'camera' : '',\n          handler: async () => {\n            try {\n              const imageData = await this.captureImage(this.camera.PictureSourceType.CAMERA);\n              resolve(imageData);\n            } catch (err) {\n              reject(err);\n            }\n            return true;\n          }\n        },\n        {\n          text: 'Photo Library',\n          icon: this.isAndroid ? 'image' : '',\n          handler: async () => {\n            try {\n              const imageData = this.captureImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n              resolve(imageData);\n            } catch (err) {\n              reject(err);\n            }\n            return true;\n          }\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          icon: this.isAndroid ? 'close' : '',\n          handler: () => {\n            reject(null);\n          }\n        }\n      ]\n      };\n      if (existingImage) {\n        actionSheetConfig.buttons.splice(2, 0, {\n          text: 'Remove',\n          role: 'desctructive',\n          icon: this.isAndroid ? 'trash' : '',\n          handler: () => {\n            resolve(null);\n          }\n        });\n      }\n      const actionSheet = await this.actionSheetController.create(actionSheetConfig);\n      await actionSheet.present();\n    }) as Promise<string>;\n  }\n\n  async captureImage(sourceType: PictureSourceType) {\n    const options = {\n      ...this.defaultOptions,\n      sourceType\n    };\n\n    try {\n      const imageData = await this.camera.getPicture(options);\n      // imageData is either a base64 encoded string or a file URI\n      // If it's base64 (DATA_URL):\n      const base64Image = 'data:image/jpeg;base64,' + imageData;\n      return base64Image;\n    } catch (err) {\n      console.log(err);\n      return null;\n    }\n  }\n\n  showPreview(imagePath) {\n    this.photoViewer.show(imagePath);\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"dismiss()\">\n        <ion-icon name=\"arrow-back\">\n        </ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>\n      {{mode === manageModes.ADD ? 'Add Note' : 'Edit Note'}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content padding class=\"manage-note\">\n  <form [formGroup]=\"noteForm\" (submit)=\"formSubmit()\">\n    <ion-list>\n      <ion-item>\n        <ion-label position=\"stacked\">\n          Title\n        </ion-label>\n        <ion-input formControlName=\"title\"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label position=\"stacked\">\n          Description\n        </ion-label>\n        <ion-textarea formControlName=\"description\" rows=\"5\"></ion-textarea>\n      </ion-item>\n      <ion-item (click)=\"takePicture()\">\n        <ion-label>\n          Image\n        </ion-label>\n        <ion-thumbnail *ngIf=\"noteImage\" slot=\"end\">\n          <img [src]=\"noteImage\"> \n        </ion-thumbnail>\n        <ion-icon *ngIf=\"!noteImage\" slot=\"end\" name=\"camera\">\n\n        </ion-icon>\n      </ion-item>\n      <ion-item class=\"manage-note__reminder\">\n          <ion-label>Reminder</ion-label>\n          <ion-icon slot=\"end\" name=\"time-outline\" *ngIf=\"!noteForm.get('reminderTime').value\"></ion-icon>\n          <ion-datetime\n            (click)=\"dateTimeClicked()\"\n            [min]=\"minTime\"\n            [class.manage-note__reminder--absolute]=\"!noteForm.get('reminderTime').value\"\n            formControlName=\"reminderTime\"\n            displayFormat=\"D MMM YYYY H:mm\"\n            slot=\"end\">\n\n          </ion-datetime\n          >\n      </ion-item>\n      <ion-button type=\"submit\" expand=\"block\" fill=\"outline\">\n        Save\n      </ion-button>\n    </ion-list>\n  </form>\n</ion-content>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Note } from 'src/app/core/models/note.model';\nimport { PictureService } from 'src/app/core/services/picture.service';\nimport { formatISO, setSeconds } from 'date-fns';\nexport enum NoteManageModes {\n  ADD = 'add',\n  EDIT = 'edit'\n};\n\n@Component({\n  selector: 'app-manage-note',\n  templateUrl: './manage-note.component.html',\n  styleUrls: ['./manage-note.component.scss'],\n})\nexport class ManageNoteComponent implements OnInit {\n  noteForm: FormGroup;\n  mode: NoteManageModes = NoteManageModes.ADD;\n  note: Note;\n  manageModes = NoteManageModes;\n  noteImage: string;\n  minTime;\n  constructor(\n    public modalController: ModalController,\n    private fb: FormBuilder,\n    private pictureService: PictureService\n  ) { }\n\n  ngOnInit() {\n    this.noteForm = this.fb.group({\n      title: ['', [Validators.required]],\n      description: ['', []],\n      reminderTime: ['', []]\n    });\n    if (this.note && this.mode === this.manageModes.EDIT) {\n      this.noteForm.get('title').setValue(this.note.title);\n      this.noteForm.get('description').setValue(this.note.description);\n      this.noteForm.get('reminderTime').setValue(this.note.reminderTime);\n      this.noteImage = this.note.imagePath ? this.note.imagePath : '';\n    }\n    this.minTime = formatISO(new Date());\n  }\n\n  async takePicture() {\n    try {\n      const imageStr = await this.pictureService.getPicture(this.noteImage);\n      this.noteImage = imageStr;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  dateTimeClicked() {\n    this.minTime = formatISO(new Date());\n  }\n\n  formSubmit() {\n    let params;\n    if (this.mode === this.manageModes.ADD) {\n      params = {\n        ...this.noteForm.value,\n        imagePath: this.noteImage\n      };\n    } else {\n      params = {\n        ...this.note,\n        ...this.noteForm.value,\n        imagePath: this.noteImage\n      };\n    }\n    params.reminderTime = params.reminderTime ?\n      formatISO(\n        setSeconds(\n          new Date(params.reminderTime), 0\n        )\n      ) : '';\n    this.modalController.dismiss(params);\n  }\n\n  dismiss() {\n    this.modalController.dismiss();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotesFilters } from 'src/app/core/constants/notes-filters.enum';\nimport { PopoverController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-notes-filters-popover',\n  templateUrl: './notes-filters-popover.component.html',\n  styleUrls: ['./notes-filters-popover.component.scss'],\n})\nexport class NotesFiltersPopoverComponent implements OnInit {\n  selectedFilter: NotesFilters = NotesFilters.ACTIVE;\n  filters = NotesFilters;\n  constructor(\n    private popoverController: PopoverController\n  ) { }\n\n  ngOnInit() {}\n\n  setFilter(filter: NotesFilters) {\n    this.popoverController.dismiss(filter);\n  }\n\n}\n","<ion-list class=\"notes-filters\">\n  <ion-radio-group [value]=\"selectedFilter\">\n    <ion-item (click)=\"setFilter(filters.ACTIVE);\">\n      <ion-label>Active</ion-label>\n      <ion-radio [value]=\"filters.ACTIVE\" slot=\"start\"></ion-radio>\n    </ion-item>\n    <ion-item (click)=\"setFilter(filters.ARCHIVED);\">\n      <ion-label>Archived</ion-label>\n      <ion-radio [value]=\"filters.ARCHIVED\" slot=\"start\"></ion-radio>\n    </ion-item>\n  </ion-radio-group>\n</ion-list>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\nimport { MobxAngularModule } from 'mobx-angular';\nimport { ManageNoteComponent } from './components/manage-note/manage-note.component';\nimport { NotesFiltersPopoverComponent } from './components/notes-filters-popover/notes-filters-popover.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    MobxAngularModule\n  ],\n  entryComponents: [\n    ManageNoteComponent,\n    NotesFiltersPopoverComponent\n  ],\n  declarations: [\n    HomePage,\n    ManageNoteComponent,\n    NotesFiltersPopoverComponent\n  ]\n})\nexport class HomePageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-title>Notes</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"showFilters($event)\">\n        <ion-icon name=\"funnel\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"home\">\n  <ion-list *mobxAutorun class=\"home__notes\">\n    <ion-card [class.home__notes__item--archived]=\"!!note.archived\" class=\"home__notes__item\" *ngFor=\"let note of store.filteredNotes\">\n      <img (click)=\"showImagePreview(note.imagePath)\" class=\"home__notes__item__img\" *ngIf=\"note.imagePath\" [src]=\"note.imagePath\">\n      <ion-card-header>\n        <ion-card-title>{{note.title}}</ion-card-title>\n      </ion-card-header>\n    \n      <ion-card-content>\n        <div class=\"home__notes__item__description\">\n          {{note.description}}\n        </div>\n        <div class=\"home__notes__item__actions\">\n          <ion-button (click)=\"editNote(note)\" color=\"dark\" fill=\"outline\">\n            <ion-icon name=\"create\"></ion-icon>\n          </ion-button>\n          <ion-button (click)=\"archiveNote(note)\" color=\"danger\" fill=\"outline\">\n            <ion-icon name=\"trash\"></ion-icon>\n          </ion-button>\n        </div>\n      </ion-card-content>\n    </ion-card>\n  </ion-list>\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button color=\"warning\" (click)=\"createNote()\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Note } from '../core/models/note.model';\nimport { NotesService } from '../core/services/notes.service';\nimport { ModalController, PopoverController } from '@ionic/angular';\nimport { ManageNoteComponent, NoteManageModes } from './components/manage-note/manage-note.component';\nimport { NotesFiltersPopoverComponent } from './components/notes-filters-popover/notes-filters-popover.component';\nimport { NotesFilters } from '../core/constants/notes-filters.enum';\nimport { PictureService } from '../core/services/picture.service';\nimport { LocalNotifications, ILocalNotification } from '@ionic-native/local-notifications/ngx';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomePage implements OnInit {\n  notifications: any[];\n  constructor(\n    public store: NotesService,\n    public modalController: ModalController,\n    public popoverController: PopoverController,\n    private pictureService: PictureService,\n    private localNotifications: LocalNotifications\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async showFilters(ev) {\n    const popover = await this.popoverController.create({\n      component: NotesFiltersPopoverComponent,\n      event: ev,\n      translucent: true,\n      componentProps: {\n        selectedFilter: this.store.filter\n      }\n    });\n    await popover.present();\n    const response = await popover.onDidDismiss();\n    if (response.data) {\n      this.store.setFilter(response.data as NotesFilters);\n    }\n  }\n\n  async archiveNote(note: Note) {\n    await this.store.archiveNote(note);\n    const isScheduled = await this.localNotifications.isScheduled(note.Id);\n    if (isScheduled) {\n      this.localNotifications.clear(note.Id);\n    }\n  }\n\n  showImagePreview(imagePath) {\n    this.pictureService.showPreview(imagePath);\n  }\n\n  async createNote() {\n    const modal = await this.modalController.create({\n      component: ManageNoteComponent,\n      componentProps: {\n        mode: NoteManageModes.ADD,\n        note: null\n      }\n    });\n    await modal.present();\n    const response = await modal.onDidDismiss();\n    const note = response.data as Note;\n    if (note) {\n      const savedNote = await this.store.createNote(note);\n      if (savedNote.reminderTime) {\n        this.localNotifications.schedule({\n          title: savedNote.title,\n          text: savedNote.description,\n          trigger: {\n            at: new Date(savedNote.reminderTime)\n          },\n          id: savedNote.Id\n        });\n      }\n    }\n  }\n\n  async editNote(noteItem: Note) {\n    const modal = await this.modalController.create({\n      component: ManageNoteComponent,\n      componentProps: {\n        mode: NoteManageModes.EDIT,\n        note: noteItem\n      }\n    });\n    await modal.present();\n    const response = await modal.onDidDismiss();\n    const note = response.data as Note;\n    if (note) {\n      const savedNote = await this.store.updateNote(note);\n      const isScheduled = await this.localNotifications.isScheduled(savedNote.Id);\n      const params: ILocalNotification = {\n        title: savedNote.title,\n        text: savedNote.description,\n        trigger: {\n          at: new Date(savedNote.reminderTime)\n        },\n        id: savedNote.Id\n      };\n      if (isScheduled) {\n        this.localNotifications.clear(params.id);\n      }\n\n      if (savedNote.reminderTime) {\n        this.localNotifications.schedule(params);\n      }\n    }\n  }\n\n}\n"]}